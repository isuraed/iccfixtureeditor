 <!--Copyright (c) 2012
    Isura Edirisinghe

        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.-->
<Window x:Class="Fixtures.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        xmlns:local="clr-namespace:Fixtures"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Title="ICC Fixture Editor" Height="600" Width="800" MinHeight="525" MinWidth="700"
        Icon="resources/Application.png">

    <Window.Resources>

        <!-- Generic brushes -->
        <SolidColorBrush x:Key="DefaultControlBorderBrush" Color="#FF688CAF"/>
        <SolidColorBrush x:Key="DefaultControlBackgroundBrush" Color="#FFE3F1FE"/>
        <SolidColorBrush x:Key="DefaultControlForegroundBrush" Color="#FF10257F"/>

        <!-- DataGrid related brushes -->
        <SolidColorBrush x:Key="GridLineColorBrush" Color="#FFCEDFF6" />
        <LinearGradientBrush x:Key="AlternateRowBackgroundBrush" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
            <GradientStop Color="#FFFEFEFF" Offset="0"/>
            <GradientStop Color="#FFE4F0FC" Offset="1"/>
        </LinearGradientBrush>

        <!-- Header related brushes -->
        <SolidColorBrush x:Key="HeaderBorderBrush" Color="#88B0E4"/>
        <SolidColorBrush x:Key="HeaderInnerBorderBrush" Color="#FFFFFF" />
        <LinearGradientBrush x:Key="HeaderBackgroundBrush" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
            <GradientStop Color="#FF98BFEB" Offset="0"/>
            <GradientStop Color="#FFB8D4F2" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HeaderHighlightedBackgoundBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FFA3CBF7" Offset="0"/>
            <GradientStop Color="#FFD9E6F9" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="HeaderPressedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FFA3CBF7" Offset="1"/>
            <GradientStop Color="#FFD9E6F9" Offset="0"/>
        </LinearGradientBrush>

        <!-- Value converters -->
        <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />

        <!-- DataGridColumnHeader Right Gripper Style -->
        <Style x:Key="ColumnHeaderRightGripperStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Width" Value="8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="SizeWE"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}">
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- DataGridColumnHeader Left Gripper Style -->
        <Style x:Key="ColumnHeaderLeftGripperStyle" 
		   BasedOn="{StaticResource ColumnHeaderRightGripperStyle}" 
		   TargetType="{x:Type Thumb}">
            <Setter Property="Width" Value="8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="SizeWE"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Name="Border"
							Padding="{TemplateBinding Padding}" 
							Background="{TemplateBinding Background}">
                            <Canvas>
                                <Line RenderOptions.EdgeMode="Aliased" Stroke="#88B0E4"
								  X1="7" Y1="{Binding ElementName=Border, Path=ActualHeight}"
								  X2="7" Y2="0"/>
                            </Canvas>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- DataGridColumnHeader Style -->
        <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="{StaticResource HeaderBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrush}" />
            <Setter Property="BorderThickness" Value="0,1,0,1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <Themes:DataGridHeaderBorder
							x:Name="headerBorder"
							SortDirection="{TemplateBinding SortDirection}"
							IsHovered="{TemplateBinding IsMouseOver}"
							IsPressed="{TemplateBinding IsPressed}"
							IsClickable="{TemplateBinding CanUserSort}"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Padding ="{TemplateBinding Padding}"
							SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
							SeparatorBrush="{TemplateBinding SeparatorBrush}">
                                <Border BorderBrush="{StaticResource HeaderInnerBorderBrush}" 
									BorderThickness="0,1,0,0">
                                    <TextBlock
									Text="{Binding}" Margin="4,0,4,0"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                </Border>
                            </Themes:DataGridHeaderBorder>

                            <Thumb x:Name="PART_LeftHeaderGripper"
							   HorizontalAlignment="Left"
							   Style="{StaticResource ColumnHeaderRightGripperStyle}"/>
                            <Thumb x:Name="PART_RightHeaderGripper"
							   HorizontalAlignment="Right"
							   Style="{StaticResource ColumnHeaderLeftGripperStyle}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="headerBorder" Property="Background" 
									Value="{StaticResource HeaderHighlightedBackgoundBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="headerBorder" Property="Background" 
									Value="{StaticResource HeaderPressedBackgroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DataGridRowHeader Gripper -->
        <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Height" Value="8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="SizeNS"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- DataGridRowHeader Style -->
        <Style x:Key="{x:Type DataGridRowHeader}"
		   TargetType="{x:Type DataGridRowHeader}">
            <Setter Property="Background" Value="{StaticResource HeaderBackgroundBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource HeaderBorderBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                        <Grid>
                            <Themes:DataGridHeaderBorder 
							x:Name="headerBorder"
							IsSelected="{TemplateBinding IsRowSelected}"
							IsHovered ="{TemplateBinding IsMouseOver}"
							IsPressed="{TemplateBinding IsPressed}"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="1,0,1,1"
							Padding ="{TemplateBinding Padding}"
							Orientation="Horizontal"
							SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
							SeparatorBrush="{TemplateBinding SeparatorBrush}">
                                <Border BorderBrush="{StaticResource HeaderInnerBorderBrush}"
									BorderThickness="0,1,0,0">
                                    <StackPanel Orientation="Horizontal">
                                        <ContentPresenter
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										VerticalAlignment="Center"/>
                                        <Control
										SnapsToDevicePixels="false"
										Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=(Validation.HasError), Converter={StaticResource bool2VisibilityConverter}}"
										Template="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=ValidationErrorTemplate}" />
                                    </StackPanel>
                                </Border>
                            </Themes:DataGridHeaderBorder>

                            <Thumb x:Name="PART_TopHeaderGripper"
							   VerticalAlignment="Top"
							   Style="{StaticResource RowHeaderGripperStyle}"/>
                            <Thumb x:Name="PART_BottomHeaderGripper"
							   VerticalAlignment="Bottom"
							   Style="{StaticResource RowHeaderGripperStyle}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="headerBorder" Property="Background" 
									Value="{StaticResource HeaderHighlightedBackgoundBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="headerBorder" Property="Background" 
									Value="{StaticResource HeaderPressedBackgroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- SelectAllButton ControlTemplate -->
        <ControlTemplate x:Key="SelectAllButtonTemplate" TargetType="{x:Type Button}">
            <Grid>
                <Rectangle x:Name="Border" SnapsToDevicePixels="True"
					   Stroke="{StaticResource HeaderBorderBrush}"
					   Fill="{StaticResource HeaderBackgroundBrush}" />
                <Border SnapsToDevicePixels="True" Margin="1,1,1,0"
					BorderBrush="White" BorderThickness="0,1,0,0" />
                <Polygon x:Name="Arrow"
					 HorizontalAlignment="Right"
					 VerticalAlignment="Bottom"
					 Margin="8,8,3,3"
					 Opacity="0.15"
					 Fill="Black"
					 Stretch="Uniform"
					 Points="0,10 10,10 10,0" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Border" Property="Fill"
						Value="{StaticResource HeaderHighlightedBackgoundBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="Border" Property="Fill"
						Value="{StaticResource HeaderPressedBackgroundBrush}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- DataGrid Style -->
        <Style x:Key="{x:Type DataGrid}" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{StaticResource DefaultControlBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource DefaultControlForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource DefaultControlBorderBrush}" />
            <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource GridLineColorBrush}" />
            <Setter Property="VerticalGridLinesBrush" Value="{StaticResource GridLineColorBrush}" />
            <Setter Property="AlternatingRowBackground" Value="{StaticResource AlternateRowBackgroundBrush}" />
            <Setter Property="ColumnHeaderStyle" Value="{StaticResource ColumnHeaderStyle}"/>
            <Setter Property="BorderThickness" Value="1" />
            <!-- This is needed to force DG to have a non-default value.  Otherwise the DGR.DetailsVisibility cannot have a value of VisibleWhenSelected by default. -->
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="True"
						Padding="{TemplateBinding Padding}">
                            <ScrollViewer Focusable="false" Name="DG_ScrollViewer">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <!--Left Column Header Corner -->
                                            <Button 
											Command="{x:Static DataGrid.SelectAllCommand}"
											Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=CellsPanelHorizontalOffset}"
											Focusable="false"
											Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}}" 
											Template="{StaticResource SelectAllButtonTemplate}"/>
                                            <!--Column Headers-->
                                            <DataGridColumnHeadersPresenter 
											Grid.Column="1" 
											Name="PART_ColumnHeadersPresenter"
											Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}}"/>

                                            <!--DataGrid content-->
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" />

                                            <ScrollBar
											Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" Name="PART_VerticalScrollBar"
											Orientation="Vertical"
											Maximum="{TemplateBinding ScrollableHeight}"
											ViewportSize="{TemplateBinding ViewportHeight}"
											Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
											Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                                            <Grid Grid.Row="2" Grid.Column="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar 
												Grid.Column="1"
												Name="PART_HorizontalScrollBar"
												Orientation="Horizontal"
												Maximum="{TemplateBinding ScrollableWidth}"
												ViewportSize="{TemplateBinding ViewportWidth}"
												Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
												Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsGrouping" Value="true">
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Right Aligned DataGridColumnHeader Style -->
        <Style x:Key="RightAlignedColumnHeaderStyle"
       TargetType="{x:Type DataGridColumnHeader}"
       BasedOn="{StaticResource ColumnHeaderStyle}">
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
        </Style>
        <!-- Center Aligned DataGridColumnHeader Style -->
        <Style x:Key="CenterAlignedColumnHeaderStyle"
       TargetType="{x:Type DataGridColumnHeader}"
       BasedOn="{StaticResource ColumnHeaderStyle}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <!-- Left Aligned DataGridCell Style -->
        <Style x:Key="LeftAlignedCellStyle" TargetType="{x:Type DataGridCell}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Left"
                                          VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Right Aligned DataGridCell Style -->
        <Style x:Key="RightAlignedCellStyle" TargetType="{x:Type DataGridCell}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Right"
                                          VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Center Aligned DataGridCell Style -->
        <Style x:Key="CenterAlignedCellStyle" TargetType="{x:Type DataGridCell}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <local:Matches x:Key="matches"/>
        <CollectionViewSource x:Key="cvsMatches" Source="{StaticResource matches}">
        </CollectionViewSource>

        <DataTemplate x:Key="displayDateTemplate">
            <TextBlock Text="{Binding Date, StringFormat=\{0:MM/dd/yyyy\}}"/>
        </DataTemplate>
        <DataTemplate x:Key="editDateTemplate">
            <DatePicker SelectedDate="{Binding Date}"/>
        </DataTemplate>

        <Style x:Key="buttonStyle" TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="3"/>
        </Style>
        
        <!--<Style x:Key="ColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Height" Value="24"/>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="ToolTip" Value="Click to sort."/>
                </Trigger>
            </Style.Triggers>
        </Style>-->
        
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <DockPanel Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" LastChildFill="True">
            <Image Source="resources/file.png" Width="32" Height="32" Margin="3"/>
            <TextBox Name="FilePath" Focusable="False" VerticalAlignment="Center" Margin="3" Padding="3"/>
        </DockPanel>

        <Grid Grid.Row="1" Grid.Column="0" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
                <Button Name="OpenButton" Click="OpenButton_Click" Style="{StaticResource buttonStyle}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="resources/Open.png" Width="32" Height="32"/>
                        <Label Content="Open" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
                <Button Name="SaveButton" Click="SaveButton_Click" Style="{StaticResource buttonStyle}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="resources/Save.png" Width="32" Height="32"/>
                        <Label Content="Save" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
                <Button Name="AddButton" Click="AddButton_Click" Style="{StaticResource buttonStyle}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="resources/Add.png" Width="32" Height="32"/>
                        <Label Content="Add" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
                <Button Name="RemoveButton" Click="RemoveButton_Click" Style="{StaticResource buttonStyle}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="resources/Remove.png" Width="32" Height="32"/>
                        <Label Content="Remove" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
            </StackPanel>
            <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Name="AboutButton" Click="AboutButton_Click" Style="{StaticResource buttonStyle}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="resources/About.png" Width="32" Height="32"/>
                        <Label Content="About" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
            </StackPanel>
        </Grid>

        <DataGrid Grid.Row="2" Grid.Column="0" Background="White" 
                  Name="matchGrid"
                  ItemsSource="{Binding Source={StaticResource cvsMatches}}"
                  HorizontalScrollBarVisibility="Hidden"
                  AutoGenerateColumns="False"
                  SelectionMode="Single" SelectionUnit="FullRow"
                  CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False"
                  CanUserSortColumns="True"
                  RowHeaderWidth="17" RowHeight="25">
            <DataGrid.Columns>
                <DataGridTextColumn 
                    Header="Id" 
                    Binding="{Binding Id}" 
                    IsReadOnly="true"
                    CellStyle="{StaticResource LeftAlignedCellStyle}"
                    MinWidth="35"/>
                <DataGridTemplateColumn
                    Header="Date"
                    CellStyle="{StaticResource LeftAlignedCellStyle}"
                    CellTemplate="{StaticResource displayDateTemplate}"
                    CellEditingTemplate="{StaticResource editDateTemplate}"
                    MinWidth="75"/>
                <DataGridComboBoxColumn
                    Header="Type"
                    SelectedItemBinding="{Binding Type}"
                    ItemsSource="{x:Static local:MatchType.Types}"
                    CellStyle="{StaticResource LeftAlignedCellStyle}"
                    MinWidth="130"/>
                <DataGridTextColumn
                    Header="Match" 
                    Binding="{Binding MatchInSeries}" 
                    CellStyle="{StaticResource RightAlignedCellStyle}"
                    MinWidth="55"/>
                <DataGridTextColumn 
                    Header="Series" 
                    Binding="{Binding SeriesLength}" 
                    CellStyle="{StaticResource RightAlignedCellStyle}"
                    MinWidth="55"/>
                <DataGridComboBoxColumn
                    Header="Host"
                    SelectedItemBinding="{Binding HostTeam}"
                    ItemsSource="{x:Static local:Team.Teams}"
                    MinWidth="150"/>
                <DataGridComboBoxColumn
                    Header="Visitor"
                    SelectedItemBinding="{Binding VisitorTeam}"
                    ItemsSource="{x:Static local:Team.Teams}"
                    MinWidth="150"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
